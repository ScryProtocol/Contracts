const { ethers } = require('ethers');
require('dotenv').config()
const keccak256 = require('keccak256')
const rpc = process.env.RPC
const pk = process.env.PK
const oofAddress = process.env.OOFAddress
const ABI = [
    {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "uint256",
                "name": "betId",
                "type": "uint256"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "player",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "playerRoll",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "string",
                "name": "salt",
                "type": "string"
            }
        ],
        "name": "BetPlaced",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "uint256",
                "name": "betId",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "playRoll",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "bool",
                "name": "won",
                "type": "bool"
            }
        ],
        "name": "BetSettled",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [],
        "name": "a",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "betAmount",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "bets",
        "outputs": [
            {
                "internalType": "address",
                "name": "player",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            },
            {
                "internalType": "string",
                "name": "salt",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "playerRoll",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "playRoll",
                "type": "uint256"
            },
            {
                "internalType": "bool",
                "name": "settled",
                "type": "bool"
            },
            {
                "internalType": "bool",
                "name": "won",
                "type": "bool"
            },
            {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "play",
                "type": "uint256"
            }
        ],
        "name": "defaultRoll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "hash",
        "outputs": [
            {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes32",
                "name": "hashd",
                "type": "bytes32"
            }
        ],
        "name": "init",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "maxRoll",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "minRoll",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "nextBetId",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "name": "pay",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "lev",
                "type": "uint256"
            },
            {
                "internalType": "string",
                "name": "salt",
                "type": "string"
            }
        ],
        "name": "placeBet",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes32",
                "name": "roll",
                "type": "bytes32"
            },
            {
                "internalType": "string",
                "name": "salt",
                "type": "string"
            }
        ],
        "name": "randomRoll",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "newBetAmount",
                "type": "uint256"
            }
        ],
        "name": "setBetAmount",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes32",
                "name": "playRoll",
                "type": "bytes32"
            }
        ],
        "name": "submitRoll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "total",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            }
        ],
        "name": "withdrawHouse",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }];

const bc = '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550662386f26fc10000600181905550600160038190555060646004819055506000600581905550611fce806100866000396000f3fe60806040526004361061011f5760003560e01c806353a79d74116100a05780638da5cb5b116100645780638da5cb5b146103b95780639aca2792146103e4578063abaafbc21461040f578063d24257c01461043a578063f2fde38b146104655761011f565b806353a79d74146102f75780635e8af73514610320578063624a332514610350578063715018a6146103795780638bec4254146103905761011f565b806323218411116100e75780632321841114610238578063243e5775146102615780632ddbd13a1461028c5780633b663195146102b75780633ccfd60b146102e05761011f565b806309bd5a60146101245780630c11dedd1461014f5780630dbe671f1461018c57806314296b1f146101b757806322af00fa146101f4575b600080fd5b34801561013057600080fd5b5061013961048e565b60405161014691906114df565b60405180910390f35b34801561015b57600080fd5b506101766004803603810190610171919061156c565b610494565b60405161018391906115b2565b60405180910390f35b34801561019857600080fd5b506101a16104ac565b6040516101ae91906115b2565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d9919061173f565b6104b2565b6040516101eb91906115b2565b60405180910390f35b34801561020057600080fd5b5061021b600480360381019061021691906117c7565b610524565b60405161022f9897969594939291906118a6565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a91906117c7565b61062e565b005b34801561026d57600080fd5b5061027661073d565b60405161028391906115b2565b60405180910390f35b34801561029857600080fd5b506102a1610743565b6040516102ae91906115b2565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d9919061192b565b610749565b005b3480156102ec57600080fd5b506102f56107d9565b005b34801561030357600080fd5b5061031e600480360381019061031991906117c7565b610904565b005b61033a60048036038101906103359190611958565b610983565b60405161034791906115b2565b60405180910390f35b34801561035c57600080fd5b506103776004803603810190610372919061192b565b610b9a565b005b34801561038557600080fd5b5061038e610fb7565b005b34801561039c57600080fd5b506103b760048036038101906103b291906117c7565b6110ea565b005b3480156103c557600080fd5b506103ce611246565b6040516103db91906119b4565b60405180910390f35b3480156103f057600080fd5b506103f961126f565b60405161040691906115b2565b60405180910390f35b34801561041b57600080fd5b50610424611275565b60405161043191906115b2565b60405180910390f35b34801561044657600080fd5b5061044f61127b565b60405161045c91906115b2565b60405180910390f35b34801561047157600080fd5b5061048c6004803603810190610487919061156c565b611281565b005b60095481565b60076020528060005260406000206000915090505481565b60085481565b60008083600854846040516020016104cc93929190611a4d565b6040516020818303038152906040528051906020012060001c905060035460016003546004546104fc9190611ab5565b6105069190611ae9565b826105119190611b6e565b61051b9190611ae9565b91505092915050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461057390611bce565b80601f016020809104026020016040519081016040528092919081815260200182805461059f90611bce565b80156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16908060060154905088565b3373ffffffffffffffffffffffffffffffffffffffff1661064d611246565b73ffffffffffffffffffffffffffffffffffffffff16146106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90611c4c565b60405180910390fd5b47600254826106b29190611ae9565b11156106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea90611cb8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610739573d6000803e3d6000fd5b5050565b60045481565b60025481565b3373ffffffffffffffffffffffffffffffffffffffff16610768611246565b73ffffffffffffffffffffffffffffffffffffffff16146107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590611c4c565b60405180910390fd5b6000801b600954146107cf57600080fd5b8060098190555050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002600082825461086e9190611ab5565b925050819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610900573d6000803e3d6000fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff16610923611246565b73ffffffffffffffffffffffffffffffffffffffff1614610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090611c4c565b60405180910390fd5b8060018190555050565b60006001543410156109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611d24565b60405180910390fd5b60008390506000600560008154809291906109e490611d44565b9190505590506040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200185815260200183815260200160008152602001600015158152602001600015158152602001428152506006600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610ac1929190611423565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff02191690831515021790555060e082015181600601559050503460026000828254610b359190611ae9565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16817f0a34ed0bf1806cd34576e5feff0708ff8a77b1956fb01df7883dd13063a6e673348588604051610b8793929190611d8d565b60405180910390a3809250505092915050565b3373ffffffffffffffffffffffffffffffffffffffff16610bb9611246565b73ffffffffffffffffffffffffffffffffffffffff1614610c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0690611c4c565b60405180910390fd5b60006006600060086000815480929190610c2890611d44565b91905055815260200190815260200160002090508060050160009054906101000a900460ff1615610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8590611e17565b60405180910390fd5b60095482604051602001610ca29190611e37565b6040516020818303038152906040528051906020012014610cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cef90611e17565b60405180910390fd5b610d8e82826002018054610d0b90611bce565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3790611bce565b8015610d845780601f10610d5957610100808354040283529160200191610d84565b820191906000526020600020905b815481529060010190602001808311610d6757829003601f168201915b50505050506104b2565b816004018190555060018160050160006101000a81548160ff0219169083151502179055508160098190555080600401548160030154600454610dd19190611e52565b1115610ed15760018160050160016101000a81548160ff021916908315150217905550600081600301548260010154610e0a9190611e83565b905080600760008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e7f9190611ae9565b92505081905550816001015482600301548360010154610e9f9190611e83565b610ea99190611ab5565b60026000828254610eba9190611ae9565b925050819055506000826001018190555050610f62565b806001015460026000828254610ee79190611ab5565b92505081905550670de0b6b3a76400003373ffffffffffffffffffffffffffffffffffffffff16311015610f61573373ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f19350505050158015610f5f573d6000803e3d6000fd5b505b5b6008547f711470d68ba2a8e80e185c904dc5dde20434ae338fd4a9d56cd024538052c67782600401548360050160019054906101000a900460ff16604051610fab929190611edd565b60405180910390a25050565b3373ffffffffffffffffffffffffffffffffffffffff16610fd6611246565b73ffffffffffffffffffffffffffffffffffffffff161461102c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102390611c4c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660008381526020019081526020016000209050426201518082600601546111159190611ae9565b10611155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114c90611e17565b60405180910390fd5b80600101546002600082825461116b9190611ab5565b92505081905550600081600101549050600082600101819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111ef573d6000803e3d6000fd5b506008547f711470d68ba2a8e80e185c904dc5dde20434ae338fd4a9d56cd024538052c67783600401548460050160019054906101000a900460ff16604051611239929190611edd565b60405180910390a2505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b60035481565b60015481565b3373ffffffffffffffffffffffffffffffffffffffff166112a0611246565b73ffffffffffffffffffffffffffffffffffffffff16146112f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ed90611c4c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135d90611f78565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b82805461142f90611bce565b90600052602060002090601f0160209004810192826114515760008555611498565b82601f1061146a57805160ff1916838001178555611498565b82800160010185558215611498579182015b8281111561149757825182559160200191906001019061147c565b5b5090506114a591906114a9565b5090565b5b808211156114c25760008160009055506001016114aa565b5090565b6000819050919050565b6114d9816114c6565b82525050565b60006020820190506114f460008301846114d0565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115398261150e565b9050919050565b6115498161152e565b811461155457600080fd5b50565b60008135905061156681611540565b92915050565b60006020828403121561158257611581611504565b5b600061159084828501611557565b91505092915050565b6000819050919050565b6115ac81611599565b82525050565b60006020820190506115c760008301846115a3565b92915050565b6115d6816114c6565b81146115e157600080fd5b50565b6000813590506115f3816115cd565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61164c82611603565b810181811067ffffffffffffffff8211171561166b5761166a611614565b5b80604052505050565b600061167e6114fa565b905061168a8282611643565b919050565b600067ffffffffffffffff8211156116aa576116a9611614565b5b6116b382611603565b9050602081019050919050565b82818337600083830152505050565b60006116e26116dd8461168f565b611674565b9050828152602081018484840111156116fe576116fd6115fe565b5b6117098482856116c0565b509392505050565b600082601f830112611726576117256115f9565b5b81356117368482602086016116cf565b91505092915050565b6000806040838503121561175657611755611504565b5b6000611764858286016115e4565b925050602083013567ffffffffffffffff81111561178557611784611509565b5b61179185828601611711565b9150509250929050565b6117a481611599565b81146117af57600080fd5b50565b6000813590506117c18161179b565b92915050565b6000602082840312156117dd576117dc611504565b5b60006117eb848285016117b2565b91505092915050565b6117fd8161152e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561183d578082015181840152602081019050611822565b8381111561184c576000848401525b50505050565b600061185d82611803565b611867818561180e565b935061187781856020860161181f565b61188081611603565b840191505092915050565b60008115159050919050565b6118a08161188b565b82525050565b6000610100820190506118bc600083018b6117f4565b6118c9602083018a6115a3565b81810360408301526118db8189611852565b90506118ea60608301886115a3565b6118f760808301876115a3565b61190460a0830186611897565b61191160c0830185611897565b61191e60e08301846115a3565b9998505050505050505050565b60006020828403121561194157611940611504565b5b600061194f848285016115e4565b91505092915050565b6000806040838503121561196f5761196e611504565b5b600061197d858286016117b2565b925050602083013567ffffffffffffffff81111561199e5761199d611509565b5b6119aa85828601611711565b9150509250929050565b60006020820190506119c960008301846117f4565b92915050565b6000819050919050565b6119ea6119e5826114c6565b6119cf565b82525050565b6000819050919050565b611a0b611a0682611599565b6119f0565b82525050565b600081905092915050565b6000611a2782611803565b611a318185611a11565b9350611a4181856020860161181f565b80840191505092915050565b6000611a5982866119d9565b602082019150611a6982856119fa565b602082019150611a798284611a1c565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ac082611599565b9150611acb83611599565b925082821015611ade57611add611a86565b5b828203905092915050565b6000611af482611599565b9150611aff83611599565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b3457611b33611a86565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b7982611599565b9150611b8483611599565b925082611b9457611b93611b3f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611be657607f821691505b60208210811415611bfa57611bf9611b9f565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c3660208361180e565b9150611c4182611c00565b602082019050919050565b60006020820190508181036000830152611c6581611c29565b9050919050565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b6000611ca260128361180e565b9150611cad82611c6c565b602082019050919050565b60006020820190508181036000830152611cd181611c95565b9050919050565b7f496e636f72726563742062657420616d6f756e74000000000000000000000000600082015250565b6000611d0e60148361180e565b9150611d1982611cd8565b602082019050919050565b60006020820190508181036000830152611d3d81611d01565b9050919050565b6000611d4f82611599565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d8257611d81611a86565b5b600182019050919050565b6000606082019050611da260008301866115a3565b611daf60208301856115a3565b8181036040830152611dc18184611852565b9050949350505050565b7f42657420616c726561647920736574746c656400000000000000000000000000600082015250565b6000611e0160138361180e565b9150611e0c82611dcb565b602082019050919050565b60006020820190508181036000830152611e3081611df4565b9050919050565b6000611e4382846119d9565b60208201915081905092915050565b6000611e5d82611599565b9150611e6883611599565b925082611e7857611e77611b3f565b5b828204905092915050565b6000611e8e82611599565b9150611e9983611599565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ed257611ed1611a86565b5b828202905092915050565b6000604082019050611ef260008301856115a3565b611eff6020830184611897565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f6260268361180e565b9150611f6d82611f06565b604082019050919050565b60006020820190508181036000830152611f9181611f55565b905091905056fea264697066735822122010c3dfb170e24118dea7f2be1726e47e132a12890085954f3d4941e9fcc9ce2064736f6c634300080c0033';
const provider = new ethers.providers.JsonRpcProvider(rpc);
const walletWithProvider = new ethers.Wallet(pk, provider);
//const signers = ['0x00f0000000f11a5380da5a184f0c563b5995fee2'];
const threshold = 1

async function init() {

    console.log("Deploying your Morpheus contract");
    // Get the ABI (Application Binary Interface) of the contract
    // Replace with the actual ABI of your contract
    const wallet = new ethers.Wallet(pk, provider);
    const signer = wallet.connect(provider);
    const contractFactory = new ethers.ContractFactory(ABI, bc, signer);
    const signers = [wallet.address];
    console.log(signers);
    const deployedContract = await contractFactory.deploy();
    await deployedContract.deployed();
    async function vrfHash() {
        let hash = '0x' + keccak256(pk.toString() + deployedContract.address).toString('hex');
        console.log('seed ', hash);
        for (let i = 0; i < 100000 + 1; i++) {
            hash = ethers.utils.keccak256(hash);
        }
        console.log('VRF seed ', hash);
        return (hash);
    }
    console.log("Contract address:", deployedContract.address);
    // Create a contract object
    const contract = new ethers.Contract(deployedContract.address, ABI, walletWithProvider);
    try {
        let tx = await contract.init(await vrfHash());
        const { events, cumulativeGasUsed, gasUsed, transactionHash } = await tx.wait();
        console.log(`Cumulative: ${cumulativeGasUsed.toNumber()}`);
        console.log(`Gas: ${gasUsed.toNumber()}`)
        console.log(`hash: ${transactionHash.toString()}`)
        console.log("ready")
    } catch (e) {
        console.log(e)
    }

}
init()